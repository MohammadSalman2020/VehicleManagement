@page "/inv_selection"
@using System.Text.Json
@using VehicleManagement.ApiService

@inject NavigationManager navmgr
@inject IApiService API
<div class="container-fluid py-4">
    <div class="row">
        <div class="col-md-4 mb-3 mb-md-0" style="height:230px;">
            <!-- Added mb-3 mb-md-0 class -->
            <div class="card mb-12">
                <div class="card-header pb-0" id="contentToPrint">
                    <h4 style="text-align:center">Please Select Invoice Type</h4>

                    <div class="form-group d-grid gap-2">
                        <button class="btn btn-warning btn-sm btn-block" @onclick="Primary">Primary</button>
                    </div>

                    <div class="form-group d-grid gap-2">
                        <button class="btn btn-warning btn-sm btn-block" @onclick="Secondary">Generate Secondary Trip</button>
                    </div>
                    <div class="form-group d-grid gap-2">
                        <button class="btn btn-warning btn-sm btn-block" @onclick="Cost">Add Trip Cost</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="card mb-12">
                <div class="card-header pb-0" id="contentToPrint">
                    <h5>Please Complete Secondary Invoices</h5>
                    <div class="table-responsive p-0">
                        <table class="table align-items-center mb-0">
                            @if (invoices.Count > 0)
                            {
                                <thead>
                                    <tr>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">ID</th>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">PK Ref.</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Date</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Shipping Point</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Receiving Point</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in invoices.OrderByDescending(a => a.invoicenumber))
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex px-2 py-1">
                                                    <div>
                                                        <img src="css/assets/Truck.jpg" class="avatar avatar-sm me-3" alt="user1">
                                                    </div>
                                                    <div class="d-flex flex-column justify-content-center">
                                                        <h6 class="mb-0 text-sm">@item.invoicenumber</h6>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <p class="text-xs font-weight-bold mb-0">@item.primaryreferences</p>
                                            </td>
                                            <td class="align-middle text-center">
                                                <span class="text-secondary text-xs font-weight-bold">@item.date</span>
                                            </td>
                                            <td class="align-middle text-center">
                                                <span class="text-secondary text-xs font-weight-bold">@item.shipping</span>
                                            </td>
                                            <td class="align-middle text-center">
                                                <span class="text-secondary text-xs font-weight-bold">@item.receiving</span>
                                            </td>
                                            <td class="align-middle text-center">
                                                <a @onclick="@(()=>ShowMessage(item.invoicenumber))" class="text-secondary font-weight-bold text-xs cursor-pointer">
                                                    Add Receiving Data
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            }
                            else
                            {
                                if (IsLoading)
                                {
                                    <DataLoaderComponent IsLoading="@IsLoading" LoadingText="Loading Invoice Data..." />
                                }
                                else
                                {
                                    <span> No Records are found</span>
                                }

                            }
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<Modal @ref="modal" Title="Add Primary Reference">
    <Body>
        <div class="container-fluid">
            <!-- Ensure full width of the viewport -->
            <div class="row justify-content-center">
                <!-- Center your column for visual appeal -->
                <div class="col-12">
                    <!-- Full width on small screens, half on medium and up -->
                    <div class="card">
                        <div class="card-body">
                            <div class="form-group d-grid gap-2">
                                <label for="txtsecondaryInvoice">Primary Invoice Reference</label>
                                <input required type="text" class="form-control" @onkeydown="HandleEnterPress" id="txtsecondaryInvoice" @bind-value="primaryinvoice" @bind-value:event="oninput" />
                            </div>
                            <div class="form-group d-grid gap-2">
                                <button class="btn btn-warning btn-sm btn-block" @onclick="Submit">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </Body>
</Modal>
<Modal @ref="costmodal" Title="Add Primary Invoice to Add Cost">
    <Body>
        <div class="container-fluid">
            <!-- Ensure full width of the viewport -->
            <div class="row justify-content-center">
                <!-- Center your column for visual appeal -->
                <div class="col-12">
                    <!-- Full width on small screens, half on medium and up -->
                    <div class="card">
                        <div class="card-body">
                            <div class="form-group d-grid gap-2">
                                <label for="txtsecondaryInvoice">Primary Invoice Reference</label>
                                <input required type="text" class="form-control" @onkeydown="HandleEnterPress2" id="txtsecondaryInvoice" @bind-value="primaryinvoice" @bind-value:event="oninput" />
                            </div>
                            <div class="form-group d-grid gap-2">
                                <button class="btn btn-warning btn-sm btn-block" @onclick="GotoCost">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </Body>
</Modal>



@code {

    private Modal modal;
    private Modal costmodal;
    private string primaryinvoice;
    public bool IsLoading = false;
    private async Task Primary()
    {
        navmgr.NavigateTo($"/invoicepanel");

    }

    List<SecondaryInvoices> invoices = new List<SecondaryInvoices>();
    private async Task Secondary()
    {
        modal.Show();

    }
    private async Task Cost()
    {
        costmodal.Show();

    }
    protected override async void OnInitialized()
    {
        IsLoading = true;
        await LoadInvoices();
        IsLoading = false;
        StateHasChanged();
    }

    private async Task LoadInvoices()
    {
        try
        {
            var rec = await API.GetRequest($"Invoice/GetIncompleteInvoices");

            if (rec != null)
            {
                JsonSerializerOptions options = new JsonSerializerOptions
                    {
                        WriteIndented = true,
                        ReferenceHandler = null
                    };
                invoices = JsonSerializer.Deserialize<List<SecondaryInvoices>>(rec, options);


                StateHasChanged();
            }
            else
            {
                Console.WriteLine("API request returned null.");
            }

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            // Handle the exception appropriately (e.g., log, display error message, etc.)
        }
    }
    private async Task Submit()
    {
        navmgr.NavigateTo($"/sc_invoice?pk={primaryinvoice.Trim()}");
    }
    private async Task GotoCost()
    {
        navmgr.NavigateTo($"/addcost?pk={primaryinvoice.Trim()}");
    }
    private async Task HandleEnterPress(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Key == "Enter")
        {
            navmgr.NavigateTo($"/sc_invoice?pk={primaryinvoice.Trim()}");
        }
    } 
    private async Task HandleEnterPress2(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Key == "Enter")
        {
            navmgr.NavigateTo($"/addcost?pk={primaryinvoice.Trim()}");
        }
    }
    private async Task ShowMessage(string x)
    {
        navmgr.NavigateTo($"/rec_sec?inv={x}");

    }

    public class SecondaryInvoices
    {
        public string invoicenumber { get; set; }
        public string primaryreferences { get; set; }
        public DateTime date { get; set; }
        public string shipping { get; set; }
        public string receiving { get; set; }
    }
}
