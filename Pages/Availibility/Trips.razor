@page "/trips"

@using System.Text.Json
@using VehicleManagement.ApiService
@using VehicleManagement.Authentication
@using VehicleManagement.Models.General

@inject IToastService toast
@inject IApiService API
@inject IUserClaimsService UserClaimsService
<AuthorizeView Policy="AllAccess">
    <Authorized>


        <div class="container-fluid">

            <div class="row">
                <div class="col-md-6">
                    @* <Nav PageName="Trips" /> *@
                    Primary Trips
                    <div class="card mb-4">

                        <div class="fleet-cards">
                            <div class="container" style="justify-content:center !important;">
                                @if (!IsChildLoading)
                                {


                                    @if (TripList.Count > 0)
                                    {
                                        @foreach (var item in TripList)
                                        {
                                            <div class="card">
                                                <div class="card-header">
                                                    <AuthorizeView Policy="MainCom">
                                                        <Authorized Context="FleetAdmin">
                                                            <span class="edit-icon" @onclick="@(() => OpenMainModal(item.loadID))"><i class="fa fa-wrench"></i></span>

                                                        </Authorized>
                                                    </AuthorizeView>


                                                </div>
                                                <div class="card-body">

                                                    <span class="tag tag-yellow">On Trip</span>
                                                    <h4>@item.vehicleID</h4>
                                                    <p>
                                                        <i class="fas fa-oil-can" aria-hidden="true"></i>
                                                        &nbsp;Product: @item.product
                                                    </p>
                                                    <p>
                                                        <i class="fa fa-map-marker" aria-hidden="true"></i>
                                                        &nbsp;Location: @item.loadingPoint
                                                    </p>
                                                    <p>
                                                        <i class="fa fa-building" aria-hidden="true"></i>
                                                        &nbsp;To: @item.decentingPoint
                                                    </p>
                                                    <p>
                                                        <i class="fa fa-calendar" aria-hidden="true"></i>
                                                        &nbsp;Trip Started On: @item.tripStart
                                                    </p>

                                                    <p>
                                                        <i class="fa fa-user" aria-hidden="true"></i>
                                                        &nbsp;Driver 1: @item.driver1
                                                        <br /><br />
                                                        <i class="fa fa-user" aria-hidden="true"></i>
                                                        &nbsp;Driver 2: @item.driver2
                                                    </p>

                                                </div>

                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div>

                                            <div class="card-body">


                                                <span class="tag tag-success">No Vehicle on Trip..</span>



                                            </div>

                                        </div>
                                    }
                                }
                                else if (IsChildLoading)
                                {
                                    <DataLoaderComponent IsLoading="IsChildLoading" LoadingText="Loading Trips..." />
                                }

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    Secondary Active Trips
                    <div class="card">
                        <div class="fleet-cards">
                            <div class="container" style="justify-content:center !important;padding-left: 0px;padding-right: 0px;">
                                @if (!IsChildLoading)
                                {


                                    @if (SCTripList.Count > 0)
                                    {
                                        <div style="overflow-x: auto;width:100%">
                                            <table style="width: 100%; border-collapse: collapse; border-spacing: 0;">
                                                <thead>
                                                    
                                                    <tr style="background-color: #ddd;font-size:12px;">
                                                        <th style="padding: 8px; text-align: left;">Primary Reference</th>
                                                        <th style="padding: 8px; text-align: left;">Trip ID</th>
                                                        <th style="padding: 8px; text-align: left;">Vehicle ID</th>
                                                        <th style="padding: 8px; text-align: left;">Trip Date</th>
                                                        <th style="padding: 8px; text-align: left;">Shipping Point</th>
                                                        <th style="padding: 8px; text-align: left;">Receiving Point</th>
                                                        <th style="padding: 8px; text-align: left;">Qty</th>
                                                        <th style="padding: 8px; text-align: left;">Status</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                  
                                                    @foreach (var item in SCTripList.OrderBy(a => a.primaryReference))
                                                    {
                                                        
                                                        
                                                        if (tempref == @item.primaryReference || count == 0)
                                                        {

                                                            <tr style="background-color: @(item.isActive ? "#4caf50" : "#f5f5f5"); color: @(item.isActive ? "#fff" : "#000");font-size:12px;">
                                                                <td style="padding: 8px; text-align: left;">@item.primaryReference</td>
                                                                <td style="padding: 8px; text-align: left;">@item.tripID</td>
                                                                <td style="padding: 8px; text-align: left;">@item.vehicleID</td>
                                                                <td style="padding: 8px; text-align: left;">@item.tripDate.ToShortDateString()</td>
                                                                <td style="padding: 8px; text-align: left;">@item.shippingPoint</td>
                                                                <td style="padding: 8px; text-align: left;">@item.receivingPoint</td>
                                                                <td style="padding: 8px; text-align: left;">@item.qty</td>
                                                                <td style="padding: 8px; text-align: left;">@(item.isActive ? "In Transit" : "Delivered")</td>
                                                            </tr>
                                                        }
                                                        else
                                                        {
                                                            <tr>
                                                                <td style="padding: 3px; text-align: left;">

                                                                </td>
                                                            </tr>
                                                            <tr style="background-color: @(item.isActive ? "#4caf50" : "#f5f5f5"); color: @(item.isActive ? "#fff" : "#000");font-size:12px;">
                                                                <td style="padding: 8px; text-align: left;">@item.primaryReference</td>
                                                                <td style="padding: 8px; text-align: left;">@item.tripID</td>
                                                                <td style="padding: 8px; text-align: left;">@item.vehicleID</td>
                                                                <td style="padding: 8px; text-align: left;">@item.tripDate.ToShortDateString()</td>
                                                                <td style="padding: 8px; text-align: left;">@item.shippingPoint</td>
                                                                <td style="padding: 8px; text-align: left;">@item.receivingPoint</td>
                                                                <td style="padding: 8px; text-align: left;">@item.qty</td>
                                                                <td style="padding: 8px; text-align: left;">@(item.isActive ? "In Transit" : "Delivered")</td>
                                                            </tr>
                                                        }

                                                        count++;
                                                         tempref = @item.primaryReference;
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    }

                                    else
                                    {
                                        <div>

                                            <div class="card-body">


                                                <span class="tag tag-success">No Vehicle on Trip..</span>



                                            </div>

                                        </div>
                                    }
                                }
                                else if (IsChildLoading)
                                {
                                    <DataLoaderComponent IsLoading="IsChildLoading" LoadingText="Loading Trips..." />
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <Modal @ref="MaintainanceModal" Title="Send To Maintainance">
            <Body>
                <div class="col-md-12">
                    <div class="card">

                        <div class="card-body">

                            <div class="row">
                                <div class="col-md-12" style="text-align:center;">
                                    <div class="form-group">

                                        <h3 class="form-control-label"> Are you sure want to Send this Vehicle To Maintainance?</h3>

                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">

                                        <label for="example-text-input" style="font-weight:bolder;" class="form-control-label">Enter Reason</label>
                                        <input type="text" for="example-text-input" @bind="@Main.reason" class="form-control">

                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="text-align:center;">
                                        @if (IsLoading2)
                                        {
                                            <DataLoaderComponent IsLoading="@IsLoading2" LoadingText="Sending To Maintainance..." />
                                        }
                                        else
                                        {
                                            <button class="btn btn-danger btn-sm ms-auto" @onclick="SendVehicle">Send Vehicle</button>
                                        }
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </Body>
        </Modal>


    </Authorized>
    <NotAuthorized>
        <_403 />
    </NotAuthorized>
</AuthorizeView>
@code {
    public List<TripConfirm> TripList = new List<TripConfirm>();
    int count = 0;
    string tempref = "";
    public List<tblSecondaryTrips> SCTripList = new List<tblSecondaryTrips>();
    public bool IsChildLoading = false;
    public List<int> BusinessID = new List<int>();
    public MaintainanceVehicle Main = new MaintainanceVehicle();
    public bool IsLoading2 = false;
    private Modal MaintainanceModal;
    private int LoadIDs;
    private async Task OpenMainModal(int LoadID)
    {
        LoadIDs = LoadID;
        MaintainanceModal.Show();

    }
    public int getpkcount( string primary)
    {
        return SCTripList.Where(a => a.primaryReference == primary).ToList().Count();
    }
    protected override async Task OnInitializedAsync()
    {

        IsChildLoading = true;
        try
        {

            BusinessID = await UserClaimsService.GetBusinessIdsAsync();

            await GetAllTrips();
            await GetSecondaryTrip();





        }
        catch (Exception ex)
        {
            IsChildLoading = false;
        }
        IsChildLoading = false;
    }
    public async Task GetSecondaryTrip()
    {
        try
        {
            JsonSerializerOptions options = new JsonSerializerOptions
                {
                    WriteIndented = true,
                    ReferenceHandler = null
                };
            string jsonData = JsonSerializer.Serialize(BusinessID, options);
            var sctrips = await API.PostRequest("Invoice/GetSctrips", jsonData);
            SCTripList = JsonSerializer.Deserialize<List<tblSecondaryTrips>>(sctrips);
            if (SCTripList.Count > 0)
            {
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
    public async Task GetAllTrips()
    {
        try
        {
            TripList = new List<TripConfirm>();
            var AvailDrafts = await API.GetRequest($"Available/GetAllTrip");
            if (AvailDrafts != "")
            {

                var rec = JsonSerializer.Deserialize<List<TripConfirm>>(AvailDrafts);
                if (rec.Count > 0)
                {
                    TripList = rec.Where(b => BusinessID.Contains(b.businessID)).OrderByDescending(p => p.loadID).ToList();

                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
    public async Task SendVehicle()
    {
        IsLoading2 = true;
        try
        {
            var rec = TripList.Where(p => p.loadID == LoadIDs).FirstOrDefault();
            Main.onMainDate = DateTime.Now;
            Main.isActive = true;
            Main.vehicleNumber = rec.vehicleID;
            Main.mainFrom = "On-Trip";
            Main.busID = rec.businessID;
            Main.loadid = rec.loadID;
            Main.business = "";
            string jsonData = JsonSerializer.Serialize(Main);
            var AddUser = await API.PostRequest($"Available/SentToTrip", jsonData);
            int Result = JsonSerializer.Deserialize<int>(AddUser);
            if (Result == 200)
            {
                await GetAllTrips();
                LoadIDs = 0;
                Main = new MaintainanceVehicle();
                MaintainanceModal.CloseModal();
                toast.ShowSuccess($"Vehicle Sent to Maintainance");

            }
            else
            {
                MaintainanceModal.CloseModal();

                toast.ShowError("Error");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        IsLoading2 = false;
    }
    public class tblSecondaryTrips
    {

        public int tripID { get; set; }               // JSON: "tripID":1
        public string? vehicleID { get; set; }         // JSON: "vehicleID":"TMH-830"
        public DateTime tripDate { get; set; }        // JSON: "tripDate":"2024-05-04T00:00:00"
        public string? shippingPoint { get; set; }     // JSON: "shippingPoint":"MCH APL"
        public string? receivingPoint { get; set; }    // JSON: "receivingPoint":"Shahid & Company"
        public string? primaryReference { get; set; }  // JSON: "primaryReference":"1040829"
        public bool isActive { get; set; }            // JSON: "isActive":true
        public int qty { get; set; }
    }
}
