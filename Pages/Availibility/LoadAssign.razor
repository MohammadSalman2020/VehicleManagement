@page "/loadassign"

@using System.Text.Json
@using VehicleManagement.ApiService
@using VehicleManagement.Authentication
@using VehicleManagement.Models.General

@inject IToastService toast
@inject IApiService API
@inject IUserClaimsService UserClaimsService
<AuthorizeView>
    <Authorized>
        <Nav PageName="Assigned Load" />

        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card mb-4">
                        <div class="fleet-cards">
                            <div class="container" style="justify-content:center !important;">
                                @if (!IsChildLoading)
                                {


                                    @if (LoadList.Count > 0)
                                    {
                                        @foreach (var item in LoadList)
                                        {
                                            <div class="card">
                                                <div class="card-header">
                                                    @if (!item.isActive)
                                                    {
                                                        <span class="edit-icon" @onclick="@(() => OpenModal(item.availID))"><i class="fa fa-edit"></i></span>

                                                    }
                                                    <AuthorizeView Roles="admin,FleetManager">
                                                        <Authorized Context="adminaccess">
                                                            <span class="edit-icon" @onclick="@(() => OpenMainModal(item.availID))"><i class="fa fa-wrench"></i></span>

                                                        </Authorized>
                                                    </AuthorizeView>


                                                </div>
                                                <div class="card-body">
                                                    <span class="tag tag-success">Load Assigned</span>

                                                    &nbsp;
                                                    @if (@item.isActive)
                                                    {
                                                        <span class="badge badge-sm bg-gradient-success">@(item.isActive == true ? "Active" : "In-Active")</span>

                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-sm bg-gradient-danger">@(item.isActive == true ? "Active" : "In-Active")</span>

                                                    }
                                                    <h4>@item.vehicle &nbsp;&nbsp;@item.chamberSeq</h4>
                                                    <span class="fa fa-map-marker">@item.location</span>
                                                    <p>
                                                        <i class="fa fa-map-marker" aria-hidden="true"></i>
                                                        &nbsp;Shipping:  @item.loading
                                                        <br> <i class="fa fa-map-marker" aria-hidden="true"></i>
                                                        &nbsp;Receiving: @item.decenting
                                                    </p>
                                                    <AuthorizeView Policy="LoadPolicy">
                                                        <Authorized Context="NotClient">
                                                            <span class="btn tag-btn" @onclick=@(()=>OpenTripModal(item.loadID))>Create Trip</span>
                                                        </Authorized>
                                                    </AuthorizeView>
                                                </div>

                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div>

                                            <div class="card-body">


                                                <span class="tag tag-success">No Vehicle on Load..</span>



                                            </div>

                                        </div>
                                    }
                                }
                                else if (IsChildLoading)
                                {
                                    <DataLoaderComponent IsLoading="@IsChildLoading" LoadingText="Loading..." />
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <Modal @ref="PushModal" Title="Activate Load">
            <Body>
                <div class="col-md-12">
                    <div class="card">

                        <div class="card-body">

                            <div class="row">
                                <div class="col-md-12" style="text-align:center;">
                                    <div class="form-group">

                                        <h3 class="form-control-label"> Are you sure want to ACTIVE this load?</h3>

                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <div class="form-group" style="text-align:center;">
                                        @if (IsLoading2)
                                        {
                                            <DataLoaderComponent IsLoading="@IsLoading2" LoadingText="Activating Load...." />

                                        }
                                        else
                                        {
                                            <button class="btn btn-danger btn-sm ms-auto" @onclick="UpdateStatus">Active</button>
                                        }


                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </Body>
        </Modal>

        <Modal @ref="MaintainanceModal" Title="Send To Maintainance">
            <Body>
                <div class="col-md-12">
                    <div class="card">

                        <div class="card-body">

                            <div class="row">
                                <div class="col-md-12" style="text-align:center;">
                                    <div class="form-group">

                                        <h3 class="form-control-label"> Are you sure want to Send this Vehicle To Maintainance?</h3>

                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">

                                        <label for="example-text-input" style="font-weight:bolder;" class="form-control-label">Enter Reason</label>
                                        <input type="text" for="example-text-input" @bind="@Main.reason" class="form-control">

                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="text-align:center;">
                                        @if (IsLoading2)
                                        {
                                            <DataLoaderComponent IsLoading="@IsLoading2" LoadingText="Sending To Maintainance..." />

                                        }
                                        else
                                        {
                                            <button class="btn btn-danger btn-sm ms-auto" @onclick="SendVehicle">Send Vehicle</button>
                                        }



                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </Body>
        </Modal>


        <Modal @ref="TripConfirmModal" Title="Confirm Trip">
            <Body>

                <div class="col-md-12">
                    <div class="card">

                        <div class="card-body">

                            <div class="row">
                                @if (TripDetails.driver1 != null)
                                {


                                    <div class="col-md-12" style="text-align:center;">
                                        <div class="form-group">

                                            <h3 class="form-control-label"> Are you sure want to create Trip for Vehicle: @TripDetails.vehicleID ?</h3>

                                        </div>
                                    </div>

                                    <div class="col-md-12">
                                        <div class="form-group">

                                            <h3 class="form-control-label"> Product: @TripDetails.product</h3>

                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">

                                            <label for="example-text-input" style="font-weight:bolder;" class="form-control-label">Business</label>
                                            <label for="example-text-input" style="color:blue;" class="form-control-label">@TripDetails.business</label>


                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="example-text-input" style="font-weight:bolder;" class="form-control-label">Loading Point</label>
                                            <label for="example-text-input" style="color:blue;" class="form-control-label">@TripDetails.loadingPoint</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="example-text-input" style="font-weight:bolder;" class="form-control-label">Decenting Point</label>
                                            <label for="example-text-input" style="color:blue;" class="form-control-label">@TripDetails.decentingPoint</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="example-text-input" style="font-weight:bolder;" class="form-control-label">Load Assign Date</label>
                                            <label for="example-text-input" style="color:blue;" class="form-control-label">@TripDetails.loadAssignDate.ToString("MM-dd-yyyy")</label>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">

                                            <label for="example-text-input" style="font-weight:bolder;" class="form-control-label">Driver 1</label>
                                            <label for="example-text-input" style="color:blue;" class="form-control-label">@TripDetails.driver1</label>


                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">

                                            <label for="example-text-input" style="font-weight:bolder;" class="form-control-label">Driver 2</label>
                                            <label for="example-text-input" style="color:blue;" class="form-control-label">@TripDetails.driver2</label>


                                        </div>
                                    </div>
                                }
                                <div class="col-md-12">
                                    <div class="form-group" style="text-align:center;">
                                        @if (TripLoading)
                                        {
                                            <DataLoaderComponent IsLoading="@TripLoading" LoadingText="Adding Trip...." />

                                        }
                                        else
                                        {
                                            <button class="btn btn-danger btn-sm ms-auto" @onclick="@(()=>AddTrip(LoadIDs))">Add Trip</button>
                                        }


                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </Body>
        </Modal>

    </Authorized>
    <NotAuthorized>
        <_403 />
    </NotAuthorized>
</AuthorizeView>


@code {
    public TripConfirm TripDetails = new TripConfirm();
    public MaintainanceVehicle Main = new MaintainanceVehicle();
    public List<GetAllLoad> LoadList = new List<GetAllLoad>();
    public bool IsChildLoading = false;
    public bool IsLoading2 = false;
    public bool TripLoading = false;
    public List<int> BusinessID = new List<int>();
    private Modal MaintainanceModal;
    private Modal PushModal;
    private Modal TripConfirmModal;
    private int AvailIDs;
    private int MainAvailIDs;
    private int LoadIDs = 0;
    protected override async Task OnInitializedAsync()
    {

        IsChildLoading = true;
        try
        {

            BusinessID = await UserClaimsService.GetBusinessIdsAsync();

            await GetAllLoad();





        }
        catch (Exception ex)
        {
            IsChildLoading = false;
        }
        IsChildLoading = false;
    }
    public async Task GetAllLoad()
    {
        try
        {
            var AvailDrafts = await API.GetRequest($"Available/GetAllLoad");
            if (AvailDrafts != "")
            {

                var rec = JsonSerializer.Deserialize<List<GetAllLoad>>(AvailDrafts);
                LoadList = rec.Where(b => BusinessID.Contains(b.businessID)).OrderByDescending(p => p.loadID).ToList();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
    private async Task OpenMainModal(int AvailID)
    {
        MainAvailIDs = AvailID;
        MaintainanceModal.Show();

    }
    private async Task OpenModal(int AvailID)
    {
        AvailIDs = AvailID;
        PushModal.Show();

    }
    private async Task OpenTripModal(int LoadID)
    {
        TripDetails = new TripConfirm();
        LoadIDs = LoadID;
        await GetLoadData(LoadID);
        TripConfirmModal.Show();



    }
    public async Task GetLoadData(int LoadID)
    {
        TripLoading = true;


        try
        {
            var AvailDrafts = await API.GetRequest($"Available/GetTripConfirm/{LoadID}");
            if (AvailDrafts != "")
            {

                TripDetails = JsonSerializer.Deserialize<TripConfirm>(AvailDrafts);

            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        TripLoading = false;
    }
    public async Task AddTrip(int LoadID)
    {
        TripLoading = true;
        try
        {

            var Driver = await API.GetRequest($"Available/AddTrip/{LoadID}");
            if (Driver != "")
            {
                LoadList = new List<GetAllLoad>();
                int ID = JsonSerializer.Deserialize<int>(Driver);
                if (ID == 200)
                {
                    toast.ShowSuccess("Trip Added Success");
                    await GetAllLoad();
                }
                else
                {
                    toast.ShowError("Error While Adding Trip");
                }



            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        LoadIDs = 0;
        TripConfirmModal.CloseModal();
        TripLoading = false;
    }

    public async Task UpdateStatus()
    {
        IsLoading2 = true;
        try
        {

            var Driver = await API.GetRequest($"Available/UpdateStatus/{AvailIDs}");
            if (Driver != "")
            {

                int ID = JsonSerializer.Deserialize<int>(Driver);
                toast.ShowSuccess("Status Updated");
                await GetAllLoad();
                PushModal.CloseModal();


            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        IsLoading2 = false;
    }

    public async Task SendVehicle()
    {
        IsLoading2 = true;
        try
        {
            var rec = LoadList.Where(p => p.availID == MainAvailIDs).FirstOrDefault();
            Main.onMainDate = DateTime.Now;
            Main.isActive = true;
            Main.vehicleNumber = rec.vehicle;
            Main.mainFrom = "On-Load";
            Main.busID = rec.businessID;
            Main.loadid = rec.loadID;
            Main.business = "";
            string jsonData = JsonSerializer.Serialize(Main);
            var AddUser = await API.PostRequest($"Available/Sent", jsonData);
            int Result = JsonSerializer.Deserialize<int>(AddUser);
            if (Result == 200)
            {
                await GetAllLoad();
                MainAvailIDs = 0;
                Main = new MaintainanceVehicle();
                MaintainanceModal.CloseModal();
                toast.ShowSuccess($"Vehicle Sent to Maintainance");

            }
            else
            {
                MaintainanceModal.CloseModal();
                toast.ShowError($"Error while Adding to Maintaince");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        IsLoading2 = false;
    }
}
