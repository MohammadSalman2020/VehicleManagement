@using System.Text.Json
@using VehicleManagement.ApiService
@using VehicleManagement.Authentication
@using VehicleManagement.Models.General
@inject NavigationManager NavigationManager
@inject IUserClaimsService UserClaimsService
@using VehicleManagement.Models.DB
@inject IApiService API
<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header pb-0">
                    <h6>@Name</h6>
                </div>
                @if (ShowDrop)
                {
                    <div class="card-header pb-0">
                        <select class="form-control" @onchange="HandleStatusChange">
                            <option value="T">All</option>
                            <option value="OT">On Trip</option>
                            <option value="M">Maintenance</option>
                            <option value="A">Available</option>
                            <option value="LA">On Load</option>
                        </select>
                    </div>
                }
                else
                {
                    <div class="card-header pb-0">
                        <div class="form-group">
                            <div class="form-control">
                                <input @onchange="DrivertStatus" type="checkbox">
                                <span class="form-control-label">Show All Filters</span>
                            </div>

                        </div>
                    </div>

                }


                <div class="card-body px-0 pt-0 pb-2">
                    <div class="table-responsive p-0">
                        <table class="table align-items-center mb-0">
                            <thead>
                                @if (IsAvailable)
                                {
                                    <tr>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Vehicle #</th>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">1st Driver</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">2nd Driver</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Vehicle Location</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Business</th>

                                        @*   <th class="text-secondary opacity-7"></th> *@
                                    </tr>
                                }
                                @if (IsMaintainance)
                                {
                                    <tr>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Vehicle #</th>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Reason</th>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Maintainance Report From</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Maintainance Report Date</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Business</th>

                                        <th class="text-secondary opacity-7"></th>
                                    </tr>
                                }
                                @if (IsOnTrip)
                                {
                                    <tr>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Vehicle #</th>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2" style="text-align:center">Business</th>
                                        @*                                      <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Trip End Location</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Current Location</th>

                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Status</th>

                                    <th class="text-secondary opacity-7"></th> *@
                                    </tr>
                                }
                                @if (IsTotal)
                                {
                                    <tr>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Vehicle #</th>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2" style="text-align:center;">Status</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">1st Driver</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">2nd Driver</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Business</th>


                                    </tr>
                                }

                                @if (IsFromOnLoad)
                                {
                                    <tr>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Vehicle #</th>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2" style="text-align:center">Loading Point</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Decanting Point</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Load Assign Date</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Business</th>

                                    </tr>

                                }

                            </thead>
                            <tbody>
                                @if (IsAvailable)
                                {
                                    @if (AvailableList.Count > 0)
                                    {
                                        foreach (var item in AvailableList)
                                        {
                                            <tr>
                                                <td>
                                                    <div class="d-flex px-2 py-1">
                                                        <div>
                                                            <img src="css/assets/Truck.jpg" class="avatar avatar-sm me-3" alt="user1">
                                                        </div>
                                                        <div class="d-flex flex-column justify-content-center">
                                                            <h6 class="mb-0 text-sm">@item.vehicleNumber</h6>

                                                        </div>
                                                    </div>
                                                </td>
                                                <td>
                                                    <p class="text-xs font-weight-bold mb-0">@item.driverID1</p>

                                                </td>

                                                <td class="align-middle text-center">
                                                    <span class="text-secondary text-xs font-weight-bold">@item.driverID2</span>
                                                </td>

                                                <td class="align-middle text-center text-sm">
                                                    <span class="badge badge-sm bg-gradient-success">@item.vehicleLocation</span>
                                                </td>
                                                <td class="align-middle text-center text-sm">
                                                    <span class="badge badge-sm bg-gradient-danger">@item.business</span>
                                                </td>
                                                @*     <td class="align-middle">
                                    <a @onclick="@(()=> NavigateToLiveTracing(item.currentlatitude,item.currentlongitude))" class="text-secondary font-weight-bold text-xs cursor-pointer" data-toggle="tooltip" data-original-title="Edit user">
                                    Live Tracing
                                    </a>
                                    </td> *@
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <DataLoaderComponent IsLoading="@IsChildLoading" LoadingText="Loading Availability...." />
                                    }


                                }
                                @if (IsMaintainance)
                                {
                                    @if (MaintainanceList.Count > 0)
                                    {
                                        foreach (var item in MaintainanceList)
                                        {

                                            <tr>
                                                <td>
                                                    <div class="d-flex px-2 py-1">
                                                        <div>
                                                            <img src="css/assets/Truck.jpg" class="avatar avatar-sm me-3" alt="user1">
                                                        </div>
                                                        <div class="d-flex flex-column justify-content-center">
                                                            <h6 class="mb-0 text-sm">@item.vehicleNumber</h6>

                                                        </div>
                                                    </div>
                                                </td>
                                                <td>
                                                    <p class="text-xs font-weight-bold mb-0">@item.reason</p>

                                                </td>

                                                 <td>
                                                    <p class="text-xs font-weight-bold mb-0">@item.mainFrom</p>

                                                </td>

                                                <td class="align-middle text-center">
                                                    <span class="text-secondary text-xs font-weight-bold">@item.onMainDate.ToString("MM-dd-yyyy")</span>
                                                </td>
                                                <td class="align-middle text-center text-sm">
                                                    <span class="badge badge-sm bg-gradient-danger">@item.business</span>
                                                </td>
                                                @*   <td class="align-middle text-center">
                                    <span class="text-secondary text-xs font-weight-bold">@item.location</span>
                                    </td>
                                    <td class="align-middle text-center text-sm">
                                    <span class="badge badge-sm bg-gradient-danger">@item.status</span>
                                    </td>
                                    <td class="align-middle">
                                    <a @onclick="@(()=> NavigateToLiveTracing(item.currentlatitude,item.currentlongitude))" class="text-secondary font-weight-bold text-xs cursor-pointer" data-toggle="tooltip" data-original-title="Edit user">
                                    Live Tracing
                                    </a>
                                    </td> *@
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <DataLoaderComponent IsLoading="@IsChildLoading" LoadingText="Loading On Maintainance...." />
                                    }
                                }

                                @if (IsOnTrip)
                                {
                                    @if (OntripList.Count > 0)
                                    {
                                        foreach (var item in OntripList)
                                        {

                                            <tr>
                                                <td>
                                                    <div class="d-flex px-2 py-1">
                                                        <div>
                                                            <img src="css/assets/Truck.jpg" class="avatar avatar-sm me-3" alt="user1">
                                                        </div>
                                                        <div class="d-flex flex-column justify-content-center">
                                                            <h6 class="mb-0 text-sm">@item.vehicleNumber</h6>

                                                        </div>
                                                    </div>
                                                </td>


                                                <td class="align-middle text-center text-sm">
                                                    <span class="badge badge-sm bg-gradient-danger">@item.business</span>
                                                </td>
                                                @*     <td class="align-middle text-center">
                                    <span class="text-secondary text-xs font-weight-bold">@item.tripEnd</span>
                                    </td>
                                    <td class="align-middle text-center">
                                    <span class="text-secondary text-xs font-weight-bold">@item.currentLocation</span>
                                    </td>
                                    <td class="align-middle text-center text-sm">
                                    <span class="badge badge-sm bg-gradient-warning">@item.status</span>
                                    </td>
                                    <td class="align-middle">
                                    <a @onclick="@(()=> NavigateToLiveTracing(item.currentlatitude,item.currentlongitude,item.startlongitude,item.startlatitude,item.endlongitude,item.endlatitude))" class="text-secondary font-weight-bold text-xs cursor-pointer" data-toggle="tooltip" data-original-title="Edit user">
                                    Live Tracing
                                    </a>
                                    </td> *@
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <DataLoaderComponent IsLoading="@IsChildLoading" LoadingText="Loading Trips...." />
                                    }
                                }

                                @if (IsTotal)
                                {
                                    @if (AllVehicles.Count > 0)
                                    {
                                        foreach (var item in AllVehicles)
                                        {

                                            <tr>
                                                <td>
                                                    <div class="d-flex px-2 py-1">
                                                        <div>
                                                            <img src="css/assets/Truck.jpg" class="avatar avatar-sm me-3" alt="user1">
                                                        </div>
                                                        <div class="d-flex flex-column justify-content-center">
                                                            <h6 class="mb-0 text-sm">@item.vehicleNumber</h6>

                                                        </div>
                                                    </div>
                                                </td>


                                                <td class="align-middle text-center text-sm">
                                                    <span class="badge badge-sm @(GetBadgeColor(item.status))">@item.status</span>
                                                </td>


                                                <td class="align-middle text-center">
                                                    <span class="text-secondary text-xs font-weight-bold">@item.driver1</span>
                                                </td>
                                                <td class="align-middle text-center">
                                                    <span class="text-secondary text-xs font-weight-bold">@item.driver2</span>
                                                </td>
                                                <td class="align-middle text-center text-sm">
                                                    <span class="badge badge-sm bg-gradient-danger">@item.businessName</span>
                                                </td>


                                                @*     <td class="align-middle">
                                    <a @onclick="@(()=> NavigateToLiveTracing(item.location,"Lahore"))" class="text-secondary font-weight-bold text-xs cursor-pointer" data-toggle="tooltip" data-original-title="Edit user">
                                    Live Tracing
                                    </a>
                                    </td> *@
                                            </tr>


                                        }
                                    }
                                    else
                                    {
                                        <DataLoaderComponent IsLoading="@IsChildLoading" LoadingText="Loading All Vehicles...." />
                                    }
                                }

                                @if (IsFromOnLoad)
                                {
                                    @if (OnLoadList.Count > 0)
                                    {
                                        foreach (var item in OnLoadList)
                                        {

                                            <tr>
                                                <td>
                                                    <div class="d-flex px-2 py-1">
                                                        <div>
                                                            <img src="css/assets/Truck.jpg" class="avatar avatar-sm me-3" alt="user1">
                                                        </div>
                                                        <div class="d-flex flex-column justify-content-center">
                                                            <h6 class="mb-0 text-sm">@item.vehicleID</h6>

                                                        </div>
                                                    </div>
                                                </td>



                                                <td class="align-middle text-center">
                                                    <span class="text-secondary text-xs font-weight-bold">@item.loadingPoint</span>
                                                </td>
                                                <td class="align-middle text-center">
                                                    <span class="text-secondary text-xs font-weight-bold">@item.decantingPoint</span>
                                                </td>
                                                <td class="align-middle text-center">
                                                    <span class="text-secondary text-xs font-weight-bold">@item.loadAssignDate.ToString("MM-dd-yyyy")</span>
                                                </td>
                                                <td class="align-middle text-center text-sm">
                                                    <span class="badge badge-sm bg-gradient-danger">@item.business</span>
                                                </td>


                                                @*     <td class="align-middle">
                                    <a @onclick="@(()=> NavigateToLiveTracing(item.location,"Lahore"))" class="text-secondary font-weight-bold text-xs cursor-pointer" data-toggle="tooltip" data-original-title="Edit user">
                                    Live Tracing
                                    </a>
                                    </td> *@
                                            </tr>


                                        }
                                    }
                                    else
                                    {
                                        <DataLoaderComponent IsLoading="@IsChildLoading" LoadingText="Loading On-Load Vehicles...." />
                                    }
                                }


                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>


</div>

@code {
    [Parameter]
    public bool IsMaintainance { get; set; } = false;
    [Parameter]
    public bool IsFromOnLoad { get; set; } = false;
    [Parameter]
    public bool IsAvailable { get; set; } = false;
    [Parameter]
    public bool IsOnTrip { get; set; } = false;
    [Parameter]
    public bool IsTotal { get; set; } = false;
    [Parameter]
    public string? Name { get; set; }
    public bool IsChildLoading = false;

    public List<int> BusinessID = new List<int>();

    public List<AvailableVehicle> AvailableList = new List<AvailableVehicle>();
    public List<MaintainanceVehicle> MaintainanceList = new List<MaintainanceVehicle>();
    public List<OntripVehicles> OntripList = new List<OntripVehicles>();
    public List<TotalVehicles> AllVehicles = new List<TotalVehicles>();
    public List<OnLoadVehicle> OnLoadList = new List<OnLoadVehicle>();

    private string selectedStatus;
    private bool ShowDrop;
    private bool isFromShowDrop = false;
    private void DrivertStatus(ChangeEventArgs e)
    {
        ShowDrop = true;
        IsMaintainance = false;
        IsTotal = true;
        IsAvailable = false;
        IsOnTrip = false;
        IsFromOnLoad = false;
    }
    string GetBadgeColor(string status)
    {
        switch (status)
        {
            case "Available":
                return "bg-gradient-success";
            case "OnTrip":
                return "bg-gradient-warning";
            case "On Maintenance":
                return "bg-gradient-danger";
            case "On Load":
                return "bg-gradient-info";
            default:
                return "bg-secondary";
        }
    }
    public async Task GetAllMaintainance()
    {
        try
        {
            var Main = await API.GetRequest($"Fleet/GetMaintaince");
            if (Main != "")
            {

                var rec = JsonSerializer.Deserialize<List<MaintainanceVehicle>>(Main);
                MaintainanceList = rec.Where(b => BusinessID.Contains(b.busID)).ToList();


            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
    public async Task GetAllOnLoad()
    {
        try
        {
            var Main = await API.GetRequest($"Fleet/GetOnLoad");
            if (Main != "")
            {

                var rec = JsonSerializer.Deserialize<List<OnLoadVehicle>>(Main);
                OnLoadList = rec.Where(b => BusinessID.Contains(b.busID)).ToList();


            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    public async Task GetAllAvailable()
    {
        try
        {
            var Available = await API.GetRequest($"Fleet/GetAvailable");
            if (Available != "")
            {

                var rec = JsonSerializer.Deserialize<List<AvailableVehicle>>(Available);
                AvailableList = rec.Where(b => BusinessID.Contains(b.businessID)).ToList();

            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    public async Task GetAllOntrip()
    {
        try
        {
            var GetOnTrip = await API.GetRequest($"Fleet/GetOnTrip");
            if (GetOnTrip != "")
            {

                var rec = JsonSerializer.Deserialize<List<OntripVehicles>>(GetOnTrip);
                OntripList = rec.Where(b => BusinessID.Contains(b.businessID)).ToList();

            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    public async Task GetAll()
    {
        try
        {
            var GetAll = await API.GetRequest($"Fleet/GetAll");
            if (GetAll != "")
            {

                var rec = JsonSerializer.Deserialize<List<TotalVehicles>>(GetAll);
                AllVehicles = rec.Where(b => BusinessID.Contains(b.businessID)).ToList();


            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            IsChildLoading = true;
            ShowDrop = IsTotal ? true : false;
            BusinessID = await UserClaimsService.GetBusinessIdsAsync();
            await GetAllAvailable();
            await GetAllOnLoad();
            await GetAllMaintainance();
            await GetAllOntrip();
            await GetAll();
            IsChildLoading = false;
        }
        catch (Exception ex)
        {
            IsChildLoading = false;
        }
    }

    private void NavigateToLiveTracing(string CurrentLatitide, string CurrentLongitude, string StartLongitude = null,

      string StartLatitude = null, string EndLongitude = null, string EndLatitude = null)
    {
        NavigationManager.NavigateTo($"/livetracing?CurrentLatitide={CurrentLatitide}&CurrentLongitude={CurrentLongitude}&StartLongitude={StartLongitude}&StartLatitude={StartLatitude}&EndLongitude={EndLongitude}&EndLatitude={EndLatitude}", true);

    }

    private void HandleStatusChange(ChangeEventArgs e)
    {
        selectedStatus = e.Value.ToString();

        if (selectedStatus == "M")
        {
            IsMaintainance = true;
            IsTotal = false;
            IsAvailable = false;
            IsOnTrip = false;
            IsFromOnLoad = false;

        }
        if (selectedStatus == "A")
        {
            IsMaintainance = false;
            IsTotal = false;
            IsAvailable = true;
            IsOnTrip = false;
            IsFromOnLoad = false;

        }
        if (selectedStatus == "OT")
        {
            IsMaintainance = false;
            IsTotal = false;
            IsAvailable = false;
            IsOnTrip = true;
            IsFromOnLoad = false;

        }
        if (selectedStatus == "T")
        {
            IsMaintainance = false;
            IsTotal = true;
            IsAvailable = false;
            IsOnTrip = false;
            IsFromOnLoad = false;


        }
        if (selectedStatus == "LA")
        {
            IsMaintainance = false;
            IsTotal = false;
            IsAvailable = false;
            IsOnTrip = false;
            IsFromOnLoad = true;

        }
    }
}
