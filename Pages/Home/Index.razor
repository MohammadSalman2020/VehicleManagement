@page "/"
@inject IJSRuntime JSRuntime
@using VehicleManagement.Models.DB
@using VehicleManagement.Authentication
@using VehicleManagement.Shared
@using VehicleManagement.Service
@inject IJSRuntime JSRuntime
@inject UserAccountService useraccountservice
@inject IJSRuntime js
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavManager



<AuthorizeView>
    <Authorized>
        <Nav PageName="Home" />
        <DataCards />
        <br />
        <div class="row">
            <div class="col-lg-12 mb-lg-0 mb-4">
                <div class="row">
                    <div class="col-lg-6 mb-lg-0 mb-4">
                        <div class="card ">
                            <VehicleManagement.Pages.Fleets.Map />
                        </div>
                    </div>
                    <div class="col-lg-6 mb-lg-0 mb-4">
                        <div class="card "> 
                            <div class="card-header pb-0 p-3">
                                <div class="d-flex justify-content-between">
                                    <h4 class="mb-2">System Suggestions</h4>
                                </div>
                                <div class="d-flex justify-content-between">
                                     <h6 class="mb-2">Digital Inspection</h6>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <p class="mb-2">Lorem Ipsum Text</p>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>

        </div>
    </Authorized>
    <Authorizing>
        <h1>You are Authorizing</h1>
    </Authorizing>
    <NotAuthorized>
        @if (_isJsReady)
        {
            <NotLogin />
        }
    </NotAuthorized>
</AuthorizeView>

@code {

    private bool _isJsReady = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                // Attempt a simple JavaScript call to check if JS is ready
                await js.InvokeVoidAsync("console.log", "");
                _isJsReady = true; // JS is ready, so set a flag or take action
                // await RequestPushNotificationPermission();
                // await GetDeviceToken();
                StateHasChanged();
            }
            catch
            {
                // If JS isn't ready, handle it gracefully
                _isJsReady = false; // JavaScript is not yet ready
            }
        }

    }


    protected override async Task OnInitializedAsync()
    {
       
    }



}
