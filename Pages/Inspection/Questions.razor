@page "/create_checklist"

@using System.Text.Json;
@using VehicleManagement.Models.General.Inspection
@inject IToastService toastService
@using VehicleManagement.Models.DB
@inject ApplicationDbContext DbContext


<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="row">

                <div class="col-4">
                    <div class="form-group">
                        <button class="btn btn-primary btn-sm ms-auto" @onclick="OpenModal">Add New</button>
                    </div>
                </div>
                <div class="col-4">
                </div>
                <div class="col-4">
                    <div class="form-group">
                        <button class="btn btn-primary btn-sm ms-auto" @onclick="OpenModal2">Create Template</button>
                    </div>
                </div>

            </div>
            <div class="card mb-4">
                <div class="card-header pb-0">
                    <h6>Inspection Questions</h6>
                </div>
                <div class="card-body px-0 pt-0 pb-2">
                    <div class="table-responsive p-0">
                        <table class="table align-items-center mb-0">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">QuestionID</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Scope</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">QuestionDesc</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Edit</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Select</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (observationsList.Count > 0)
                                {
                                    @foreach (var item in observationsList)
                                    {


                                        <tr class="question">
                                            <td>
                                                <p class="text-xs font-weight-bold mb-0">@item.obsID</p>
                                            </td>
                                            <td>
                                                <p class="text-xs font-weight-bold mb-0">@item.scopedesc</p>

                                            </td>
                                            <td>
                                                <p class="text-xs font-weight-bold mb-0">@item.obsDesc</p>

                                            </td>

                                            <td class="align-middle allign-item-center">
                                                <a @onclick=@(()=>ShowMessage("Please Edit Values")) class="text-secondary font-weight-bold text-xs cursor-pointer btnhoo">
                                                    Edit
                                                </a>
                                                &nbsp;
                                                <a @onclick=@(()=>ShowMessage("Please Edit Values")) class="text-secondary font-weight-bold text-xs cursor-pointer btnhoo">
                                                    Delete
                                                </a>
                                            </td>
                                            <td class="align-middle allign-item-center">
                                                <input class="text-xs font-weight-bold mb-0" type="checkbox" id="myCheckbox" name="select">
                                            </td>
                                        </tr>
                                    }
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>


</div>
<Modal @ref="modal" Title="Add Driver">
    <Body>
        <div class="col-md-12">
            <div class="card">

                <div class="card-body">

                    <div class="row">

                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="example-text-input" class="form-control-label">Add Question Here</label>
                                <input type="text" class="form-control" required @onkeydown="HandleKeyPress" @bind-value="@questiontext"></input>

                            </div>

                            <div class="form-group">
                                <label for="example-text-input" class="form-control-label">Question Scope</label>
                                <select @bind="selectedScope" class="form-control">
                                    <option value="">Select a scope</option>
                                    @foreach (var scope in scopes)
                                    {
                                        <option value="@scope.scopeID">@scope.scopeDesc</option>
                                    }
                                </select>

                            </div>

                            <div class="form-group">
                                <button class="btn btn-primary  btn-sm ms-auto" @onclick=@(()=>AddObservation(questiontext,selectedScope))>Submit</button>
                            </div>
                        </div>


                    </div>

                </div>
            </div>
        </div>
    </Body>
</Modal>
<Modal @ref="modal2" Title="Add Inspection Template">
    <Body>
        <div class="col-md-12">
            <div class="card">

                <div class="card-body">

                    <div class="row">

                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="example-text-input" class="form-control-label">Inspection Template Name</label>
                                <input type="text" class="form-control" required @onkeydown="HandleKeyPress" @bind-value="@templatename"></input>

                            </div>

                            <div class="form-group">
                                <label for="example-text-input" class="form-control-label">Select Scope</label>
                                @*   <select @bind="selectedScope" class="form-control">
                                <option value="">Select a scope</option>
                                @foreach (var scope in scopes)
                                {
                                <option value="@scope.ScopeID">@scope.ScopeDesc</option>
                                }
                                </select> *@

                            </div>

                            <div class="form-group">
                                <button class="btn btn-primary  btn-sm ms-auto" @onclick=@(()=>AddObservation(questiontext,selectedScope))>Submit</button>
                            </div>
                        </div>


                    </div>

                </div>
            </div>
        </div>
    </Body>
</Modal>


@code {


    private string? questiontext;
    private string? scope;
    private string? templatename;

    private List<tblScope> scopes = new List<tblScope>();
    private List<Observations> observationsList = new List<Observations>();

    private int selectedScope;

    InspectionApiService insApiService;

    public Questions()
    {

        insApiService = new InspectionApiService("https://localhost:44388/");
    }



    protected override async Task OnInitializedAsync()
    {
        await LoadScopes();
    }

    private async Task LoadScopes()
    {
        try
        {
            scopes = JsonSerializer.Deserialize<List<tblScope>>(insApiService.GetRequest("GetScopes"));
            observationsList = JsonSerializer.Deserialize<List<Observations>>(insApiService.GetRequest("GetObservations"));
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

   
    private Modal modal;
    private Modal modal2;
    private void OpenModal()
    {
        modal.Show();
    }
    private void OpenModal2()
    {
        modal2.Show();
    }
    public async Task<string> AddObservation(string desc, int scopeID)
    {
        tblObservation observation = new tblObservation { ObsDesc = desc, ScopeID = scopeID };
        try
        {
            // Send POST request to the API endpoint and await the response
            //var response = await ObservationService.Create("Inspection/AddObservation", observation);

            string jsonData = JsonSerializer.Serialize(observation);
            string result = insApiService.PostRequest("AddObservation", jsonData);

            // Clear input fields and show success message

            questiontext = string.Empty;
            scope = string.Empty;
            ShowMessage("Observation Added Successfully");
            modal.CloseModal();

            return "";

        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"HTTP Request Exception: {ex.Message}");
            throw; // Rethrow the exception
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception: {ex.Message}");
            throw; // Rethrow the exception
        }
    }
    private async void HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await AddObservation(questiontext, int.Parse(scope));
        }
    }


    private void HandleStatusChange(ChangeEventArgs e)
    {
        scope = e.Value.ToString();

    }

    public async Task ShowMessage(string s)
    {
        toastService.ShowSuccess(s);
    }



}

